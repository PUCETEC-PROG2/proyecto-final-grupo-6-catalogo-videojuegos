# Generated by Django 4.2 on 2025-01-20 21:36

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('tienda', '0003_auto_20250120_1603'),
    ]

    operations = [
            migrations.RunSQL(
                """
                CREATE FUNCTION obtener_par_cedula(cedula character varying) RETURNS integer
                LANGUAGE plpgsql
                AS $$
                DECLARE
                cedula_text TEXT;
                i INTEGER;
                impares INTEGER := 0;
                digito INTEGER;
                BEGIN

                cedula_text := cedula;    
                FOR i IN 1..LENGTH(cedula_text) LOOP
                    IF i % 2 = 1 THEN  
                        digito := CAST(SUBSTRING(cedula_text FROM i FOR 1) AS INTEGER);
                        digito := digito * 2; 
                        
                        IF digito > 9 THEN
                            digito := digito - 9;
                        END IF;
                        
                    
                        impares := impares + digito;
                    END IF;
                END LOOP;
                
                RETURN impares;
                END;
                $$;

            CREATE FUNCTION obtener_par(cedula character varying) RETURNS integer
                LANGUAGE plpgsql
                AS $$
            DECLARE
                cedula_text TEXT;
                i INTEGER;
                pares INTEGER := 0;
                digito INTEGER;
            BEGIN
                cedula_text := cedula;
                
                FOR i IN 1..LENGTH(cedula_text) LOOP
                    IF i % 2 = 0 THEN  
                        digito := CAST(SUBSTRING(cedula_text FROM i FOR 1) AS INTEGER);
                        
                        pares := pares + digito;
                    END IF;
                END LOOP;
                
                RETURN pares;
            END;
            $$;

            CREATE FUNCTION verificacion_cedula() RETURNS trigger
                LANGUAGE plpgsql
                AS $$
            DECLARE
                verificacion INTEGER;
                pares INTEGER;
                impares INTEGER;
                digito INTEGER;
                temporal INTEGER;
            BEGIN
                pares := obtener_par(NEW.cedula);  
                impares := obtener_impar(NEW.cedula);  

                temporal := pares + impares;


                verificacion := ((FLOOR(temporal / 10) + 1) * 10) - temporal;


                digito := CAST(SUBSTRING(NEW.cedula FROM LENGTH(NEW.cedula) FOR 1) AS INTEGER);

                IF verificacion = digito THEN
                    RETURN NEW;  
                ELSE
                    RAISE EXCEPTION 'La cédula es inválida.';
                END IF;
            END;
            $$;

            CREATE TRIGGER verificar_cedula_trigger
            BEFORE INSERT OR UPDATE ON tienda_cliente
            FOR EACH ROW
            EXECUTE FUNCTION verificacion_cedula();


            CREATE FUNCTION verificacion_email() RETURNS trigger
                LANGUAGE plpgsql
                AS $$
            BEGIN

                IF position('@' IN NEW.correo) > 0 AND position('.' IN NEW.correo) > position('@' IN NEW.correo) THEN
                    RETURN NEW;  
                ELSE
                    RAISE EXCEPTION 'El correo electrónico no tiene un formato válido.';
                END IF;
            END;
            $$;

            CREATE TRIGGER verificar_email_trigger
            BEFORE INSERT OR UPDATE ON tienda_cliente
            FOR EACH ROW
            EXECUTE FUNCTION verificacion_email();

            CREATE FUNCTION verificacion_telefono() RETURNS trigger
                LANGUAGE plpgsql
                AS $$
            BEGIN
                
                IF length(NEW.telefono) = 10 AND NEW.telefono LIKE '09%' THEN
                    RETURN NEW; 
                ELSE
                    RAISE EXCEPTION 'El número de teléfono debe tener 10 dígitos y comenzar con "09".';
                END IF;
            END;
            $$;

            CREATE TRIGGER verificar_telefono_trigger
            BEFORE INSERT OR UPDATE ON tienda_cliente
            FOR EACH ROW
            EXECUTE FUNCTION verificacion_telefono();
            """
            )
    ]
